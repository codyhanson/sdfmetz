module Language.Bison.ShowInstances where

import Language.Bison.Syntax

{- Generated by DrIFT (Automatic class derivations for Haskell) -}
{-# LINE 1 "Syntax.hs" #-}
{-* Generated by DrIFT : Look, but Don't Touch. *-}
instance Show BisonSyntax where
    showsPrec d (BisonSyntax aa ab ac) = showParen (d >= 10)
	      (showString "BisonSyntax" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab . showChar ' ' . showsPrec 10 ac)

instance Show Declaration where
    showsPrec d (GrammarDecl aa) = showParen (d >= 10)
	      (showString "GrammarDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (PrologueDecl aa) = showParen (d >= 10)
	      (showString "PrologueDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (DebugDecl) = showString "DebugDecl"
    showsPrec d (DefineDecl aa ab) = showParen (d >= 10)
	      (showString "DefineDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (DefinesDecl) = showString "DefinesDecl"
    showsPrec d (ErrorVerboseDecl) = showString "ErrorVerboseDecl"
    showsPrec d (ExpectDecl aa) = showParen (d >= 10)
	      (showString "ExpectDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (ExpectRRDecl aa ab) = showParen (d >= 10)
	      (showString "ExpectRRDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (FilePrefixDecl aa) = showParen (d >= 10)
	      (showString "FilePrefixDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (GlrParserDecl) = showString "GlrParserDecl"
    showsPrec d (InitialActionDecl aa) = showParen (d >= 10)
	      (showString "InitialActionDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (LexParamDecl aa) = showParen (d >= 10)
	      (showString "LexParamDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (LocationsDecl) = showString "LocationsDecl"
    showsPrec d (NamePrefixDecl aa ab) = showParen (d >= 10)
	      (showString "NamePrefixDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (NoLinesDecl aa) = showParen (d >= 10)
	      (showString "NoLinesDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (NonDetParserDecl) = showString "NonDetParserDecl"
    showsPrec d (OutputDecl aa) = showParen (d >= 10)
	      (showString "OutputDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (ParseParamDecl aa) = showParen (d >= 10)
	      (showString "ParseParamDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (PureParserDecl aa) = showParen (d >= 10)
	      (showString "PureParserDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (SkeletonDecl aa) = showParen (d >= 10)
	      (showString "SkeletonDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (TokenTableDecl aa) = showParen (d >= 10)
	      (showString "TokenTableDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (VerboseDecl) = showString "VerboseDecl"
    showsPrec d (YaccDecl) = showString "YaccDecl"
    showsPrec d (SemiColon) = showString "SemiColon"

instance Show GrammarDeclaration where
    showsPrec d (LeftPriorDecl aa ab) = showParen (d >= 10)
	      (showString "LeftPriorDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (RightPriorDecl aa ab) = showParen (d >= 10)
	      (showString "RightPriorDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (BinaryPriorDecl aa ab) = showParen (d >= 10)
	      (showString "BinaryPriorDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (NonAssocPriorDecl aa ab) = showParen (d >= 10)
	      (showString "NonAssocPriorDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (NTermDecl aa) = showParen (d >= 10)
	      (showString "NTermDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (TermDecl aa) = showParen (d >= 10)
	      (showString "TermDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (TokenDecl aa ab) = showParen (d >= 10)
	      (showString "TokenDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (TypeDecl aa ab) = showParen (d >= 10)
	      (showString "TypeDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (StartDecl aa) = showParen (d >= 10)
	      (showString "StartDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (UnionDecl aa) = showParen (d >= 10)
	      (showString "UnionDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (DestructorDecl aa ab) = showParen (d >= 10)
	      (showString "DestructorDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (PrinterDecl aa ab) = showParen (d >= 10)
	      (showString "PrinterDecl" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (DefaultPrecDecl aa) = showParen (d >= 10)
	      (showString "DefaultPrecDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (NoDefaultPrecDecl aa) = showParen (d >= 10)
	      (showString "NoDefaultPrecDecl" . showChar ' ' . showsPrec 10 aa)

instance Show Type where
    showsPrec d (Type aa) = showParen (d >= 10)
	      (showString "Type" . showChar ' ' . showsPrec 10 aa)

instance Show SymbolDef where
    showsPrec d (TypeDef aa) = showParen (d >= 10)
	      (showString "TypeDef" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (IdDef aa) = showParen (d >= 10)
	      (showString "IdDef" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (IdIntDef aa ab) = showParen (d >= 10)
	      (showString "IdIntDef" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (IdStrLexDef aa ab) = showParen (d >= 10)
	      (showString "IdStrLexDef" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (IdIntStrLexDef aa ab ac) = showParen (d >= 10)
	      (showString "IdIntStrLexDef" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab . showChar ' ' . showsPrec 10 ac)

instance Show Grammar where
    showsPrec d (Grammar aa) = showParen (d >= 10)
	      (showString "Grammar" . showChar ' ' . showsPrec 10 aa)

instance Show RulesOrGrammarDeclaration where
    showsPrec d (RulesOrGrammarDeclaration_1 aa) = showParen (d >= 10)
	      (showString "RulesOrGrammarDeclaration_1" . showChar ' ' .
	       showsPrec 10 aa)
    showsPrec d (RulesOrGrammarDeclaration_2 aa) = showParen (d >= 10)
	      (showString "RulesOrGrammarDeclaration_2" . showChar ' ' .
	       showsPrec 10 aa)

instance Show Rules where
    showsPrec d (Rules aa ab) = showParen (d >= 10)
	      (showString "Rules" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)

instance Show Rhses where
    showsPrec d (Rhses_1 aa) = showParen (d >= 10)
	      (showString "Rhses_1" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (Rhses_2 aa ab) = showParen (d >= 10)
	      (showString "Rhses_2" . showChar ' ' . showsPrec 10 aa
	       . showChar ' ' . showsPrec 10 ab)
    showsPrec d (Rhses_3 aa) = showParen (d >= 10)
	      (showString "Rhses_3" . showChar ' ' . showsPrec 10 aa)

instance Show Rhs where
    showsPrec d (Rhs aa) = showParen (d >= 10)
	      (showString "Rhs" . showChar ' ' . showsPrec 10 aa)

instance Show RhsSymb where
    showsPrec d (Symb aa) = showParen (d >= 10)
	      (showString "Symb" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (Code aa) = showParen (d >= 10)
	      (showString "Code" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (PrecDecl aa) = showParen (d >= 10)
	      (showString "PrecDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (DPrecDecl aa) = showParen (d >= 10)
	      (showString "DPrecDecl" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (MergeDecl aa) = showParen (d >= 10)
	      (showString "MergeDecl" . showChar ' ' . showsPrec 10 aa)

instance Show Symbol where
    showsPrec d (SymbolId aa) = showParen (d >= 10)
	      (showString "SymbolId" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (SymbolStrLex aa) = showParen (d >= 10)
	      (showString "SymbolStrLex" . showChar ' ' . showsPrec 10 aa)
    showsPrec d (SymbolChar aa) = showParen (d >= 10)
	      (showString "SymbolChar" . showChar ' ' . showsPrec 10 aa)

--  Imported from other files :-
